scalar UUID
scalar JSON
scalar Date
scalar Void

input CreatePinInput {
  pin: PinInput!
}

type CreatePinPayload {
  pin: Pin
}

input CreateUserInput {
  user: UserInput!
}

type CreateUserPayload {
  user: User
}

input DeletePinByIdInput {
  id: UUID!
}

type DeletePinPayload {
  pin: Pin
}

input DeleteUserByIdInput {
  id: UUID!
}

type DeleteUserPayload {
  user: User
}

type Mutation {
  createPin(input: CreatePinInput!): CreatePinPayload
  createUser(input: CreateUserInput!): CreateUserPayload
  updatePinById(input: UpdatePinByIdInput!): UpdatePinPayload
  updateUserById(input: UpdateUserByIdInput!): UpdateUserPayload
  deletePinById(input: DeletePinByIdInput!): DeletePinPayload
  deleteUserById(input: DeleteUserByIdInput!): DeleteUserPayload
}

type Pin {
  id: UUID!
  createdAt: Date
  updatedAt: Date
  imageUrl: String
  userId: String

  """
  Reads a single `User` that is related to this `Pin`.
  """
  user: User
}

"""
An input for mutations affecting `Pin`
"""
input PinInput {
  id: UUID!
  createdAt: Date
  updatedAt: Date
  imageUrl: String
  userId: String
}

"""
Represents an update to a `Pin`. Fields that are set will be updated.
"""
input PinPatch {
  id: UUID
  createdAt: Date
  updatedAt: Date
  imageUrl: String
  userId: String
}

input UpdatePinByIdInput {
  """
  An object where the defined keys will be set on the `Pin` being updated.
  """
  pinPatch: PinPatch!
  id: UUID!
}

"""
The output of our update `Pin` mutation.
"""
type UpdatePinPayload {
  """
  The `Pin` that was updated by this mutation.
  """
  pin: Pin
}

"""
All input for the `updateUserById` mutation.
"""
input UpdateUserByIdInput {
  """
  An object where the defined keys will be set on the `User` being updated.
  """
  userPatch: UserPatch!
  id: UUID!
}

"""
The output of our update `User` mutation.
"""
type UpdateUserPayload {
  """
  The `User` that was updated by this mutation.
  """
  user: User
}

"""
An input for mutations affecting `User`
"""
input UserInput {
  fullName: String!
  screenName: String!
  email: String!
  createdAt: Date!
  updatedAt: Date!
  id: UUID!
}

"""
Represents an update to a `User`. Fields that are set will be updated.
"""
input UserPatch {
  fullName: String
  screenName: String
  email: String
  createdAt: Date
  updatedAt: Date
  id: UUID
}

type User {
  id: UUID!
  fullName: String!
  screenName: String!
  email: String!
  createdAt: Date!
  updatedAt: Date!
  pins(limit: Int, order: String, where: JSON, offset: Int): [Pin]
}

type Query {
  pins(limit: Int, order: String, where: JSON, offset: Int): [Pin]
  pin(id: UUID!): Pin
  users(limit: Int, order: String, where: JSON, offset: Int): [User]
  user(id: UUID!): User
}
